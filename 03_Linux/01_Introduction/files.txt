1. resolv.conf 
    The resolv.conf file is typically used to configure the DNS (Domain Name System) resolver. It contains information about the DNS servers that your system should use to resolve domain names to IP addresses. 
    However, the location of the resolv.conf file may vary depending on your Linux distribution.
    location: /etc/resolv.conf

2. fstab
    The fstab file, which stands for "file system table," is used to configure and define how various disk partitions and storage devices are mounted and used by the system at boot time. 
    It contains information about the file systems, their mount points, and various options related to how they should be mounted.
    location: /etc/fstab

3. .bashrc & .bash_profile
    Its primary purpose is to configure and customize the behavior of the Bash shell for an individual user. Here's what you can do with the .bashrc file:
        Customizing Shell Environment: You can use the .bashrc file to set environment variables, customize your prompt (PS1), define aliases, and modify the behavior of your shell session.
        Configuring Aliases: Aliases are shortcuts or abbreviations for frequently used commands. You can define aliases in your .bashrc file to make your shell commands more efficient.
        Setting Environment Variables: You can define environment variables in this file. These variables can affect how various commands and applications behave in your shell.
        Running Commands at Login: You can add commands or scripts to be executed when you log in or start a new shell session. This is useful for automatically configuring your shell environment.
        Customizing Prompts: You can modify the appearance and content of your command prompt (PS1) by defining the PS1 variable in the .bashrc file.
    location: hidden in home directory

    The .bash_profile file is another important configuration file in the Bash shell. Like the .bashrc file, it is used for customizing the behavior and environment of the Bash shell, but there are some key differences between the two:
        Invocation:
            .bash_profile is typically read and executed during login shell sessions. A login shell is usually the first shell you encounter when you log into a system, and it runs various initialization tasks.
            .bashrc, on the other hand, is read and executed for every new interactive shell session, including both login and non-login shells.
        Use Case:
            .bash_profile is often used for tasks that should be executed only once at the beginning of a login session, such as setting environment variables or running scripts that should not be executed for each new interactive shell.
            .bashrc is used for customizing your interactive shell environment and is typically used for tasks that should apply to all your shell sessions, whether they are login shells or not.

        Common Contents:
            In practice, you may see .bash_profile files that contain a reference to the .bashrc file. This is a way to ensure that the settings in .bashrc are also applied in login shells.

4. passwd & group
    It stores essential user account information, such as usernames, user IDs (UIDs), group IDs (GIDs), home directories, login shells, and more. 
    This information is used by the system to manage user accounts and permissions.
    location: /etc/passwd

    the /etc/group file is used to store information about user groups. 
    User groups are collections of user accounts, and these groups serve various purposes, such as managing permissions and access control.

5. crontab
    It allows users to schedule and automate tasks or commands to run at specified intervals. 
    These scheduled tasks are often referred to as "cron jobs."
    Cron is particularly useful for performing routine or repetitive tasks, such as backups, log rotations, data synchronization, and system maintenance, without requiring manual intervention. 
    Cron jobs can be scheduled to run at various time intervals, including minutes, hours, days, weeks, and months, and they can be customized to suit specific needs.
    location: /etc/crontab

6. Uptime
    is a measure of how long a computer, server, or system has been continuously running and operational since its last reboot or start. 
    It is often expressed in terms of hours, days, or sometimes years. 
    Uptime is an important metric used in various contexts, including system administration, server monitoring, and reliability assessment.

7. /proc/cmdline
    The /proc/cmdline file is a virtual file in the /proc directory of Linux-based operating systems. 
    It contains the command-line parameters and options that were passed to the Linux kernel during the system's boot process. 
    These parameters configure the kernel's behavior and influence various aspects of the system's startup.

8. sources.list
    The sources.list file is a configuration file used in Debian-based Linux distributions, including Ubuntu. 
    It is a crucial part of the package management system and is used to specify the software repositories from which the system retrieves and installs software packages.
    location: /etc/apt/sources.list

9. XDG_SESSION_TYPE
    XDG_SESSION_TYPE is an environment variable used in Unix-like operating systems, particularly in Linux, to indicate the type of graphical session that is currently running.

10. DISPLAY
    The DISPLAY variable defines the display or X server to which graphical applications should connect for displaying their graphical user interfaces. 
    This variable tells the applications where to render their graphical output.